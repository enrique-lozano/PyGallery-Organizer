{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "additionalProperties": false,
  "properties": {
    "extended_logger": {
      "type": "boolean",
      "description": "True if you want an extended logger that prints modifications/deletions on files in addition to other actions"
    },
    "include_all_files": {
      "type": "boolean",
      "description": "If true, all the content in the input directory will be copied to the output_path without any exception. If false, only photos and videos will be copied, apart of the files with a extension specified in the include_extra_formats param."
    },
    "auto_clean_output": {
      "type": "boolean",
      "description": "If true, the program will auto-remove all the existing content in the output directory. When false, the program will ask the user before making any deletion.",
      "default": false
    },
    "include_extra_formats": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Array of formats to include in the output_directory, apart of the photos and videos. Will have no effect if the include_all_files option is true"
    },
    "duplicates_search": {
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "default": true,
          "description": "If this feature will be triggered during the script",
          "type": "boolean"
        },
        "hash_size": {
          "default": 64,
          "description": "Used for identification of similar images. With larger values the search will be more exhaustive but slower. Giving a value of 0 skips the search for duplicates/similar altogether",
          "type": "number"
        },
        "similarity": {
          "default": 99,
          "minimum": 1,
          "maximum": 100,
          "description": "Similarity of the images that will trigger an action (the action will be chosen by the user). It is a number from 0 to 100, with 100 being the number to pass when we want only completely identical images to appear. This parameter does not affect the speed of the process, as does `hash_size`",
          "type": "number"
        },
        "plot_before_confirm": {
          "type": "boolean",
          "description": "Plot/display relevant images in a new window before confirm some actions to apply on them"
        }
      },
      "required": ["enabled", "hash_size", "similarity", "plot_before_confirm"],
      "type": "object"
    },
    "metadata_fixer": {
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "default": true,
          "description": "If this feature will be triggered during the script",
          "type": "boolean"
        },
        "fill_missing_datetime_info_from": {
          "type": "array",
          "description": "Indicates where to obtain the date of the file to assign it to its metadata.\nA list must be defined here in order of preference, that is, if for example we enter `['filename', 'filename']`, first the program will try to obtain the date from the name of the file, and if it does not succeed , the date of its creation will be used.\nLeaving the list empty will mean that the metadata related to the dates will not be modified at all for any file.",
          "items": {
            "type": "string",
            "enum": ["filename", "filedate"]
          }
        },
        "overwrite_datetime": {
          "default": false,
          "description": "Force the write of a new datetime in the metadata of the file, based on the `fill_missing_datetime_info_from` attribute. If false, the script will only write the datetime info on the files that don't have this data yet",
          "type": "boolean"
        }
      },
      "required": [
        "enabled",
        "overwrite_datetime",
        "fill_missing_datetime_info_from"
      ],
      "type": "object"
    },
    "file_organizer": {
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "default": true,
          "description": "If this feature will be triggered during the script",
          "type": "boolean"
        },
        "folder_structure": {
          "description": "Folder tree in which your files will be organized based on their metadata. Each list element will be a level in the new folder structure",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "file_name_template": {
          "description": "Names that will have the parsed files in the output directory. Leave it blank or null if you want the current file name to be maintained.\nBe careful when specifying this attribute, since a template that is too generic could lead to many duplicates. When this happens, file names are created by adding (1), (2)... to the current name",
          "type": ["string", "null"]
        }
      },
      "required": ["enabled", "folder_structure", "file_name_template"],
      "type": "object"
    },
    "input_path": {
      "type": "string"
    },
    "output_path": {
      "type": "string"
    },
    "recursive": {
      "type": "boolean"
    }
  },
  "required": [
    "extended_logger",
    "duplicates_search",
    "auto_clean_output",
    "metadata_fixer",
    "file_organizer",
    "input_path",
    "output_path",
    "recursive",
    "include_all_files"
  ],
  "type": "object"
}
